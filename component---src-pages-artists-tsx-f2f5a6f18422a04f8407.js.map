{"version":3,"file":"component---src-pages-artists-tsx-f2f5a6f18422a04f8407.js","mappings":"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","sources":["webpack://welte-ads/./src/labels/names.ts","webpack://welte-ads/./src/pages/artists.tsx"],"sourcesContent":["export const names = {\n    \"https://d-nb.info/gnd/118518011\": \"Busoni, Ferrucio\",\n    \"https://d-nb.info/gnd/118986724\": \"Paderewski, Ignacy Jan\",\n    \"https://d-nb.info/gnd/118953915\": \"Carreño, Teresa\",\n    \"https://d-nb.info/gnd/116014490\": \"Pachmann, Vladimir\",\n    \"https://d-nb.info/gnd/118697641\": \"Grieg, Edvard\",\n    \"https://d-nb.info/gnd/11918625X\": \"Hofmann, Józef\",\n    \"https://d-nb.info/gnd/118501437\": \"Albert, Eugen d'\",\n    \"https://d-nb.info/gnd/11875081X\": \"Saint-Saëns, Camille\",\n    \"https://d-nb.info/gnd/116210419\": \"Kleeberg, Clotilde\",\n    \"https://d-nb.info/gnd/116888652\": \"Grünfeld, Alfred\",\n    \"https://d-nb.info/gnd/11863027X\": \"Weingartner, Felix\",\n    \"https://d-nb.info/gnd/118786253\": \"Nikisch, Arthur\",\n    \"https://d-nb.info/gnd/116942037\": \"Mottl, Felix\",\n    \"https://d-nb.info/gnd/116327642\": \"Gabrilowitsch, Ossip\",\n    \"https://d-nb.info/gnd/124379923\": \"Lhévinne, Josef\",\n    \"https://d-nb.info/gnd/116204400\": \"Bloomfield-Zeisler, Fannie\",\n    \"https://d-nb.info/gnd/118694820\": \"Gieseking, Walter\",\n    \"https://d-nb.info/gnd/134788370\": \"Pouishnov, Lev\",\n    \"https://d-nb.info/gnd/116713178\": \"Saar, Louis Victor\",\n    \"https://d-nb.info/gnd/116422319\": \"Hambourg, Mark\",\n    \"https://d-nb.info/gnd/116040378\": \"Davies, Fanny\",\n    \"https://d-nb.info/gnd/119281953\": \"Ganz, Rudolph\",\n    \"https://d-nb.info/gnd/116796170\": \"Friedheim, Arthur\",\n    \"https://d-nb.info/gnd/119466821\": \"Samaroff, Olga\",\n    \"https://d-nb.info/gnd/117110450\": \"Scharwenka, Xaver\",\n    \"https://d-nb.info/gnd/118524186\": \"Debussy, Claude\",\n    \"https://d-nb.info/gnd/116308621\": \"Pugno, Raoul\",\n    \"https://d-nb.info/gnd/11861911X\": \"Strauss, Richard\",\n    \"https://d-nb.info/gnd/118598988\": \"Reger, Max\",\n    \"https://d-nb.info/gnd/116429623\": \"Reisenauer, Alfred\",\n    \"https://d-nb.info/gnd/119388472\": \"Reinecke, Carl\",\n    \"https://d-nb.info/gnd/120890143\": \"Leschetitzky, Theodor\",\n    \"https://d-nb.info/gnd/116060689\": \"Pauer, Max\",\n    \"https://d-nb.info/gnd/116662166\": \"Lamond, Frederic\",\n    \"https://d-nb.info/gnd/116977108\": \"Sauer, Emil von\",\n    \"https://d-nb.info/gnd/119362112\": \"Casella, Alfred\",\n    \"https://d-nb.info/gnd/116014326\": \"Ansorge, Conrad\",\n    \"https://d-nb.info/gnd/117223794\": \"Stavenhagen, Bernhard\",\n    \"welte.studios\": \"Welte Mignon Studios\",\n    \"m.welte\": \"M. Welte & Söhne\",\n    \"m.welte.sons\": \"M. Welte & Sons, Inc.\",\n    \"welte.mignon.autograph\": \"Welte-Mignon Autograph Piano Co.\",\n    \"welte.cleveland\": \"The Welte-Mignon Studio, Cleveland & Manning Piano Co.\",\n    \"steinway\": \"Steinway & Sons\",\n    \"a.schmid\": \"Alfred Schmid Nachf.\",\n    \"birkel\": \"Geo J. Birkel Company\",\n    \"hardman\": \"Hardman, Pack & Co.\",\n    \"auto.pneumatic.action\": \"Auto Pneumatic Action Co.\",\n    \"welte.mignon.corp\": \"Welte Mignon Corporation\",\n    \"ef.droop\": \"E. F. Droop & Sons\",\n    \"bush.lane\": \"Bush & Lane\"\n} as { [index: string]: string }\n","import React, { useEffect, useRef, useState } from 'react'\nimport Layout from \"../components/layout\"\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Container, Typography } from '@mui/material'\nimport * as d3 from 'd3'\nimport { names } from \"../labels/names\"\n\nconst stringToColour = (str: string) => {\n    let hash = 0;\n    str.split('').forEach(char => {\n        hash = char.charCodeAt(0) + ((hash << 5) - hash)\n    })\n    let colour = '#'\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xff\n        colour += value.toString(16).padStart(2, '0')\n    }\n    return colour\n}\n\ninterface Mention {\n    name: string,\n    count: number,\n    year: number\n}\n\nconst Artists = () => {\n    const [selectedMention, setSelectedMention] = useState<Mention>()\n\n    const artistsSvg = useRef<SVGSVGElement>(null)\n    const data = useStaticQuery(graphql`\n        query {\n          allMetadata {\n            nodes {\n              dates\n              mentions\n            }\n          }\n        }\n    `)\n\n    useEffect(() => {\n        if (!artistsSvg.current || !data) return\n\n        const mentionsPerYear: Mention[] = data.allMetadata.nodes.reduce((acc: Mention[], curr: any) => {\n            curr.dates.forEach((date: string) => {\n                curr.mentions.forEach((mention_: string) => {\n                    const existingMention = acc.find(mention => mention.name === mention_ && mention.year === Number(date))\n                    if (existingMention) {\n                        existingMention.count += 1\n                    }\n                    else {\n                        acc.push({\n                            name: mention_,\n                            year: Number(date),\n                            count: 1\n                        } as Mention)\n                    }\n                })\n            })\n            return acc\n        }, [] as Mention[]);\n\n        let allArtists = Array.from(new Set(mentionsPerYear.map(m => m.name)));\n        const mentionsPerArtist = allArtists\n            .map(artist => {\n                const mentions = mentionsPerYear\n                    .filter(mention => mention.name === artist)\n\n                return {\n                    name: artist,\n                    count: mentions.reduce((acc, cur) => acc + cur.count, 0),\n                    avarageYear: mentions.reduce((acc, cur) => acc + cur.year, 0) / mentions.length\n                }\n            })\n            .sort((a, b) => (b.avarageYear - a.avarageYear) || (a.count - b.count))\n        allArtists = mentionsPerArtist.map(artist => artist.name)\n\n        const svgElement = d3.select(artistsSvg.current)\n\n        // set the dimensions and margins of the graph\n        const margin = { top: 30, right: 30, bottom: 30, left: 60 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        svgElement\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                `translate(${margin.left}, ${margin.top})`);\n\n        // Scales\n        const x = d3.scaleLinear()\n            .domain([1905, 1935])\n            .range([0, width]);\n\n        const radiusScale = d3.scaleLinear()\n            .domain([0, Math.max(...mentionsPerYear.map(mention => mention.count))])\n            .range([0, 30])\n\n        const y = (artist: string) => {\n            let value = 0;\n            for (const mention of mentionsPerArtist) {\n                if (mention.name === artist) {\n                    value += radiusScale(mention.count) / 2\n                    break\n                }\n                value += radiusScale(mention.count)\n            }\n\n            return height - value\n        }\n\n        svgElement\n            .append(\"g\")\n            .attr(\"transform\", `translate(230, ${height})`)\n            .call(d3\n                .axisBottom(x)\n                .tickFormat((d: any, i: number) => {\n                    if (i % 2) return d;\n                    else return null;\n                }))\n\n        svgElement.append('g')\n            .selectAll('lines')\n            .data(allArtists)\n            .join('line')\n            .attr('x1', 230)\n            .attr('y1', d => y(d))\n            .attr('x2', width + 230)\n            .attr('y2', d => y(d))\n            .attr('stroke-width', d => radiusScale(\n                mentionsPerArtist.find(mention => mention.name === d)?.count!) / 150\n            )\n            .attr('stroke', 'black')\n\n        svgElement.append('g')\n            .selectAll('labels')\n            .data(allArtists)\n            .join('text')\n            .attr('x', 10)\n            .attr('y', d => y(d))\n            .style('dominant-baseline', 'central')\n            .attr('font-size', d =>\n                radiusScale(\n                    mentionsPerArtist.find(mention => mention.name === d)?.count!) / 2.7\n            )\n            .text(d => names[d] || d)\n\n        svgElement.append('g')\n            .selectAll(\"dot\")\n            .data(mentionsPerYear)\n            .join(\"circle\")\n            .attr('transform', `translate(230, 0)`)\n            .attr(\"cx\", (d: any) => x(d.year))\n            .attr(\"cy\", (d: any) => y(d.name))\n            .style(\"fill\", (d: any) => stringToColour(d.name))\n            .style(\"fill-opacity\", 0.8)\n            .attr(\"r\", (d: any) => radiusScale(d.count))\n            .on('mouseover', (_, data: any) => {\n                setSelectedMention(data)\n            })\n            .on('mouseout', () => setSelectedMention(undefined))\n    }, [])\n\n    return (\n        <Layout location=\"Artists\" editionPage={false}>\n            <Container component=\"main\" maxWidth=\"md\">\n                <h2>Mentioned Artists</h2>\n                <Typography>\n                    The following plot shows, how often artists\n                    were mentioned in the advertisements per year.\n                </Typography>\n\n                <svg ref={artistsSvg} />\n                {selectedMention && (\n                    <div>\n                        In {selectedMention.year}, {names[selectedMention.name] || selectedMention.name} was\n                        mentioned {selectedMention.count} times.\n                    </div>\n                )}\n            </Container>\n        </Layout>\n    )\n}\n\nexport default Artists\n"],"names":["names","Artists","selectedMention","setSelectedMention","useState","artistsSvg","useRef","data","useStaticQuery","useEffect","current","mentionsPerYear","allMetadata","nodes","reduce","acc","curr","dates","forEach","date","mentions","mention_","existingMention","find","mention","name","year","Number","count","push","allArtists","Array","from","Set","map","m","mentionsPerArtist","artist","filter","cur","avarageYear","length","sort","a","b","svgElement","d3","margin","width","height","attr","append","x","domain","range","radiusScale","Math","max","apply","_toConsumableArray","y","value","call","tickFormat","d","i","selectAll","join","_mentionsPerArtist$fi","style","_mentionsPerArtist$fi2","text","str","hash","split","char","charCodeAt","colour","toString","padStart","stringToColour","on","_","undefined","___EmotionJSX","Layout","location","editionPage","Container","component","maxWidth","Typography","ref"],"sourceRoot":""}