{"version":3,"file":"component---src-pages-topics-tsx-0b09201a0f695f700b84.js","mappings":"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","sources":["webpack://welte-ads/./src/labels/topicLabels.ts","webpack://welte-ads/./src/helpers/stringToColour.tsx","webpack://welte-ads/./src/components/weighedCircles.tsx","webpack://welte-ads/./src/pages/topics.tsx"],"sourcesContent":["\nexport const topicLabels = {\n    \"#analysis\": \"Analysis\",\n    \"#entertainment\": \"Entertainment\",\n    \"#immortality\": \"Immortality\",\n    \"#exact_reproduction\": \"Exact Reproduction\",\n    \"#distinction_from_mechanical\": \"Distinction from Mechanical\",\n    \"#personality\": \"Personality\",\n    \"#touch_of_a_button\": \"Touch of a Button\",\n    \"#virtual_presence\": \"Virtual Presence\",\n    \"#soulfulness\": \"Soulfulness\",\n    \"#repeatability\": \"Repeatability\",\n    \"#miracle\": \"Miracle\",\n    \"#technical_invention\": \"Technical Invention\",\n    \"#unreached_ideal\": \"Ideal Instrument\",\n    \"#educational_use\": \"Educational Use\",\n    \"#analogy_to_photography\": \"Analogy to Photography\",\n    \"#home\": \"Home\",\n    \"#affordability\": \"Affordability\",\n    \"#sitting_woman\": \"Sitting Woman\",\n    \"#analogy_to_phonograph\": \"Analogy to Phonograph\",\n    \"#listening\": \"Revelled Listening\",\n    \"#immediate_recognizability\": \"Immediate Recognizability\",\n    \"#phantom_body\": \"Phantom Body\",\n    \"#suit_every_mood\": \"Suit every Mood\",\n    \"#invisibility\": \"Invisibility\",\n    \"#secret\": \"Secret\"\n} as { [index: string]: string }\n","\nexport const stringToColour = (str: string) => {\n    let hash = 0;\n    str.split('').forEach(char => {\n        hash = char.charCodeAt(0) + ((hash << 5) - hash);\n    });\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 255;\n        colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n};\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport { topicLabels } from '../labels/topicLabels'\nimport { stringToColour } from '../helpers/stringToColour'\nimport \"./weighedCircles.css\"\nimport { navigate } from 'gatsby'\n\ninterface WeighedTerm extends d3.SimulationNodeDatum {\n    topic: string\n    weight: number\n}\n\ninterface TopicsCircleProps {\n    data: WeighedTerm[]\n}\n\nexport const WeighedCircles = ({ data }: TopicsCircleProps) => {\n    const svgRef = useRef<SVGSVGElement>(null)\n\n    useEffect(() => {\n        if (!svgRef.current) return\n\n        // reset\n        svgRef.current.innerHTML = ''\n\n        const width = 1000, height = 800;\n\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height);\n\n        // Scales the weight of a term to the radius\n        // of the circle representing it\n        const radiusScale = d3.scaleLinear()\n            .domain([0, d3.max(data, (d: any) => d.weight)])\n            .range([0, 150]);\n\n        let simulation = d3.forceSimulation(data)\n            .force('charge', d3.forceManyBody().strength(7))\n            .force('collide', d3.forceCollide().radius(d => radiusScale((d as WeighedTerm).weight) + 1))\n            .force('center', d3.forceCenter(width / 2, height / 2))\n            .force('radial', d3.forceRadial((d: WeighedTerm) => radiusScale(d.weight), width / 2, height / 2));\n\n        const node = svg.append('g')\n            .attr('class', 'nodes')\n            .selectAll('g')\n            .data(data)\n            .enter()\n            .append('g')\n\n        // Draw the circles\n        node.attr('class', 'circle-group')\n            .append('circle')\n            .attr('class', 'weighted-circle')\n            .attr('r', d => radiusScale(d.weight))\n            .style(\"fill\", (d: any) => stringToColour(d.topic))\n            .on('click', (_, d) => {\n                navigate(`/topic${d.topic}`)\n            })\n\n        // Draw the labels\n        node.append(\"text\")\n            .attr('class', 'circle-label')\n            .style('font-size', d => 0.25 * radiusScale(d.weight) + 'px')\n            .text(d => topicLabels[d.topic] || d.topic)\n\n        // Update the positions in each tick\n        simulation.nodes(data)\n            .on('tick', () => {\n                node\n                    .attr('transform', d => `translate(${d.x}, ${d.y})`)\n            });\n    }, [])\n\n    return (\n        <svg width={900} height={700} ref={svgRef} />\n    )\n}\n","import React from 'react'\nimport Layout from \"../components/layout\"\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Container, Typography } from '@mui/material'\nimport { WeighedCircles } from '../components/weighedCircles'\nimport { Segment } from './topic'\n\nconst Topics = () => {\n    const data = useStaticQuery(graphql`\n        query {\n          allMetadata {\n            nodes {\n              dates\n              topicSegments {\n                topic\n              }\n            }\n          }\n        }\n    `)\n\n    const unorderedTopics = data.allMetadata.nodes.map((node: any) => node.topicSegments as Segment).flat().map((segment: Segment) => segment.topic)\n\n    const counts = unorderedTopics.reduce((acc: any, value: any) => {\n        acc[value] = (acc[value] || 0) + 1;\n        return acc;\n    }, {});\n\n    const weighedTopics = Object.keys(counts).map(key => ({\n        topic: key,\n        weight: counts[key]\n    }));\n\n    return (\n        <Layout location=\"Topics\" editionPage={false}>\n            <Container component=\"main\" maxWidth=\"md\">\n                <h2>Topics</h2>\n                <Typography>\n                    Topics are understood as recurring motifs,\n                    such as the illustration of a half-transparent \"ghost\"\n                    sitting at the piano.\n                </Typography>\n\n                <WeighedCircles data={weighedTopics} />\n            </Container>\n        </Layout>\n    )\n}\n\nexport default Topics\n"],"names":["topicLabels","stringToColour","str","hash","split","forEach","char","charCodeAt","colour","i","toString","padStart","WeighedCircles","_ref","data","svgRef","useRef","useEffect","current","innerHTML","width","svg","d3","attr","radiusScale","domain","d","weight","range","simulation","force","strength","radius","height","node","append","selectAll","enter","style","topic","on","_","navigate","text","nodes","x","y","___EmotionJSX","ref","Topics","counts","useStaticQuery","allMetadata","map","topicSegments","flat","segment","reduce","acc","value","weighedTopics","Object","keys","key","Layout","location","editionPage","Container","component","maxWidth","Typography"],"sourceRoot":""}